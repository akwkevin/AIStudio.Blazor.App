@namespace AIStudio.Blazor.UI.Pages.User
@layout UserLayout
@page "/Home/Login"
@using AIStudio.Blazor.UI.Models.Params

<div class="main__b__0">
    <div class="login">
        <Form Model="@_model" Loading="loading" OnFinish="HandleSubmit">
            <Tabs ActiveKey="@context.LoginType">
                <TabPane Key="1" Tab="Account Login">
                    <FormItem>
                        <AntDesign.Input Placeholder="Username: admin or user" Size="large" @bind-Value="@context.UserName">
                            <Prefix><Icon Type="user" /></Prefix>
                        </AntDesign.Input>
                    </FormItem>
                    <FormItem>
                        <AntDesign.Input Placeholder="Password: ant.design" Size="large" @bind-Value="@context.Password" Type="password">
                            <Prefix><Icon Type="lock" /></Prefix>
                        </AntDesign.Input>
                    </FormItem>
                </TabPane>
            </Tabs>
            <div>
                <Checkbox Checked="@context.AutoLogin">
                    Auto Login
                </Checkbox>
                <a style="float: right;">
                    Forgot Password
                </a>
            </div>
            <Button Type="primary" HtmlType="submit" Class="submit" Size="large" Block>Log in </Button>
            <div class="other">
                Other Login Methods
                <Icon Class="icon" Type="alipay-circle" />
                <Icon Class="icon" Type="taobao-circle" />
                <Icon Class="icon" Type="weibo-circle" />
                <a class="register" href="/user/register">Register Account</a>
            </div>
        </Form>
    </div>
</div>

@code {
    private readonly LoginParamsType _model = new LoginParamsType();
    bool loading = false;

    [Inject] 
    public NavigationManager NavigationManager { get; set; }

    [Inject] 
    public JwtAuthenticationStateProvider AuthStateProvider { get; set; }

    [Inject] 
    public MessageService Message { get; set; }
    public async void HandleSubmit()
    {
        try
        {
            loading = true;
            var result = await AuthStateProvider.Login(_model.UserName, _model.Password);
            if (result.Success)
            {
                await Message.Success("登录成功");
                NavigationManager.NavigateTo("/");
            }
            else
            {
                await Message.Warning(result.Msg);
            }
        }
        finally
        {
            loading = false;
        }
    }
}